trigger:
  - main
variables:
  - group: sonar-demo-var
jobs:
   - job: Build
     pool:
        vmImage: 'windows-latest'


     steps:
       - checkout: self
         fetchDepth: 0
       - script: npm install
         displayName: 'üì¶ Installing Dependencies'
       - powershell: |
              $repoUrl = "$(Build.Repository.Uri)"
              $AppName = $repoUrl.Substring($repoUrl.LastIndexOf("/") + 1).Replace(".git", "")
              Write-Host "##vso[task.setvariable variable=AppName;isoutput=true]$AppName"
         displayName: 'üìù Setting App Name'
         name: 'AppName'
       # Prepare Analysis Configuration task

       - task: SnykSecurityScan@1
         inputs:
              serviceConnectionEndpoint: 'Snyk Auth-DevOps Maintenance'
              testType: 'app'
              severityThreshold: ''
              monitorWhen: 'always'
              failOnIssues: true
         displayName: 'üõ°Ô∏è Security Scan & Vulnerability Check'
       - task: SonarQubePrepare@5    
         inputs:
           SonarQube: 'sonarqube-container'
           scannerMode: 'CLI'
           configMode: 'manual'
           cliProjectKey: '$(AppName.AppName)'
           cliProjectName: '$(AppName.AppName)'
           cliSources: '.'
           extraProperties: 'sonar.token=$(sonarToken)'
       - task: PowerShell@2
         inputs:
            targetType: 'inline'
            script: |
              $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.branch.name":"[\w,/,-]*"\,?'
              Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"     
       # Run Code Analysis task
       - task: SonarQubeAnalyze@5
         inputs:
          jdkversion: 'JAVA_HOME_17_X64'
     
       # Publish Quality Gate Result task
       - task: SonarQubePublish@5
         inputs:
           pollingTimeoutSec: "3000"